/* LIST DOCKER IMAGES */
docker image ls

/* DELETE A DOCKER CONTAINER */
docker rm node-app -f

/* DELETE A DOCKER CONTAINER AND ASSOCIATED VOLUME */
docker rm node-app -fv

/* BUILD A DOCKER CONTAINER FROM AN IMAGE */
docker build -t node-app-image .

/* RUN A DOCKER CONTAINER */
docker run -v C:/Users/konst/Documents/__WORKSPACE__/Studying/_various_tutorials/node-docker/:/app:ro -p 3000:3000 -d --name node-app node-app-image 

OR 

docker run -v C:/Users/konst/Documents/__WORKSPACE__/Studying/_various_tutorials/node-docker/:/app:ro -v /app/node_modules --env-file ./.env -p 4000:4000 -d --name node-app node-app-image

/* SHOW RUNNING DOCKER CONTAINERS */
docker ps

/* SHOW ALL DOCKER CONTAINERS */
docker ps -a

/* SHOW LOGS FOR A CONTAINER */
docker logs node-app

/* TO GET INSIDE THE CONTAINER */
docker exec -it node-app bash

/* PRINT ALL EXISTING DOCKER VOLUMES */
docker volume ls

/* REMOVE ALL EXISTING DOCKER VOLUMES */
docker volume prune

/* RUN DOCKER-COMPOSE FILE COMMANDS AND RUN NEW BUILD */
docker-compose up -d --build

/* DELETE DOCKER-COMPOSE CONTAINER AND ASSOCIATED VOLUME */
docker-compose down -v

/* RUN DOCKER-COMPOSE FILE COMMANDS THAT WERE SPLIT IN 2 FILES*/
docker-compose -f docker-compose.yml -f docker-compose.dev.yml up -d --build

/* TEAR DOWN WITH DOCKER-COMPOSE FILE COMMANDS THAT WERE SPLIT IN 2 FILES*/
docker-compose -f docker-compose.yml -f docker-compose.dev.yml down

/* TO CONNECT TO OUR MONGO CLIENT */
docker exec -it node-docker-mongo-1  mongo -u "costa" -p "mypassword"

/* TO CHECK INFO ON CONTAINER */
docker inspect node-docker-node-app-1